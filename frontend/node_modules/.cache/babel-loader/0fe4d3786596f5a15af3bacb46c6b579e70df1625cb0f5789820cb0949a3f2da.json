{"ast":null,"code":"var _jsxFileName = \"D:\\\\Internshala-project\\\\mini-linkedin-platform\\\\frontend\\\\src\\\\components\\\\Feed\\\\PostFeed.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const PostFeed = () => {\n//     const [posts, setPosts] = useState([]);\n\n//     useEffect(() => {\n//         const fetchPosts = async () => {\n//             try {\n//                 const response = await axios.get('/api/posts');\n//                 setPosts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching posts:', error);\n//             }\n//         };\n\n//         fetchPosts();\n//     }, []);\n\n//     return (\n//         <div className=\"p-4\">\n//             <h2 className=\"text-2xl font-bold mb-4\">Public Posts</h2>\n//             <div className=\"space-y-4\">\n//                 {posts.map(post => (\n//                     <div key={post._id} className=\"p-4 border rounded-lg shadow\">\n//                         <h3 className=\"font-semibold\">{post.author.name}</h3>\n//                         <p className=\"text-gray-700\">{post.content}</p>\n//                         <p className=\"text-gray-500 text-sm\">{new Date(post.createdAt).toLocaleString()}</p>\n//                     </div>\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default PostFeed;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostFeed = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState('');\n  const fetchPosts = async () => {\n    const res = await fetch('/api/posts');\n    const data = await res.json();\n    setPosts(data);\n  };\n  const handlePostSubmit = async e => {\n    e.preventDefault();\n    const res = await fetch('/api/posts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        content: newPost\n      })\n    });\n    if (res.ok) {\n      setNewPost('');\n      fetchPosts(); // Refresh feed\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePostSubmit,\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newPost,\n        onChange: e => setNewPost(e.target.value),\n        className: \"w-full p-2 border rounded\",\n        placeholder: \"What's on your mind?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-2 px-4 py-2 bg-blue-600 text-white rounded\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"border-b py-2\",\n        children: post.content\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(PostFeed, \"mLF3sy7cPe8e17rtLBlx7M+fFKk=\");\n_c = PostFeed;\nexport default PostFeed;\nvar _c;\n$RefreshReg$(_c, \"PostFeed\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PostFeed","_s","posts","setPosts","newPost","setNewPost","fetchPosts","res","fetch","data","json","handlePostSubmit","e","preventDefault","method","headers","body","JSON","stringify","content","ok","children","onSubmit","className","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","map","post","id","_c","$RefreshReg$"],"sources":["D:/Internshala-project/mini-linkedin-platform/frontend/src/components/Feed/PostFeed.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const PostFeed = () => {\n//     const [posts, setPosts] = useState([]);\n\n//     useEffect(() => {\n//         const fetchPosts = async () => {\n//             try {\n//                 const response = await axios.get('/api/posts');\n//                 setPosts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching posts:', error);\n//             }\n//         };\n\n//         fetchPosts();\n//     }, []);\n\n//     return (\n//         <div className=\"p-4\">\n//             <h2 className=\"text-2xl font-bold mb-4\">Public Posts</h2>\n//             <div className=\"space-y-4\">\n//                 {posts.map(post => (\n//                     <div key={post._id} className=\"p-4 border rounded-lg shadow\">\n//                         <h3 className=\"font-semibold\">{post.author.name}</h3>\n//                         <p className=\"text-gray-700\">{post.content}</p>\n//                         <p className=\"text-gray-500 text-sm\">{new Date(post.createdAt).toLocaleString()}</p>\n//                     </div>\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default PostFeed;\n\nimport React, { useState, useEffect } from 'react';\n\nconst PostFeed = () => {\n    const [posts, setPosts] = useState([]);\n    const [newPost, setNewPost] = useState('');\n\n    const fetchPosts = async () => {\n        const res = await fetch('/api/posts');\n        const data = await res.json();\n        setPosts(data);\n    };\n\n    const handlePostSubmit = async (e) => {\n        e.preventDefault();\n        const res = await fetch('/api/posts', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ content: newPost }),\n        });\n        if (res.ok) {\n            setNewPost('');\n            fetchPosts(); // Refresh feed\n        }\n    };\n\n    useEffect(() => {\n        fetchPosts();\n    }, []);\n\n    return (\n        <div>\n            <form onSubmit={handlePostSubmit} className=\"mb-4\">\n                <textarea\n                    value={newPost}\n                    onChange={(e) => setNewPost(e.target.value)}\n                    className=\"w-full p-2 border rounded\"\n                    placeholder=\"What's on your mind?\"\n                />\n                <button type=\"submit\" className=\"mt-2 px-4 py-2 bg-blue-600 text-white rounded\">\n                    Post\n                </button>\n            </form>\n            <ul>\n                {posts.map((post) => (\n                    <li key={post.id} className=\"border-b py-2\">\n                        {post.content}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default PostFeed;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;IACrC,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7BP,QAAQ,CAACM,IAAI,CAAC;EAClB,CAAC;EAED,MAAME,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMN,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;MAClCM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAEf;MAAQ,CAAC;IAC7C,CAAC,CAAC;IACF,IAAIG,GAAG,CAACa,EAAE,EAAE;MACRf,UAAU,CAAC,EAAE,CAAC;MACdC,UAAU,CAAC,CAAC,CAAC,CAAC;IAClB;EACJ,CAAC;EAEDT,SAAS,CAAC,MAAM;IACZS,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAMuB,QAAQ,EAAEX,gBAAiB;MAACY,SAAS,EAAC,MAAM;MAAAF,QAAA,gBAC9CtB,OAAA;QACIyB,KAAK,EAAEpB,OAAQ;QACfqB,QAAQ,EAAGb,CAAC,IAAKP,UAAU,CAACO,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;QAC5CD,SAAS,EAAC,2BAA2B;QACrCI,WAAW,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACFhC,OAAA;QAAQiC,IAAI,EAAC,QAAQ;QAACT,SAAS,EAAC,+CAA+C;QAAAF,QAAA,EAAC;MAEhF;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACPhC,OAAA;MAAAsB,QAAA,EACKnB,KAAK,CAAC+B,GAAG,CAAEC,IAAI,iBACZnC,OAAA;QAAkBwB,SAAS,EAAC,eAAe;QAAAF,QAAA,EACtCa,IAAI,CAACf;MAAO,GADRe,IAAI,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAC9B,EAAA,CAjDID,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AAmDd,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}