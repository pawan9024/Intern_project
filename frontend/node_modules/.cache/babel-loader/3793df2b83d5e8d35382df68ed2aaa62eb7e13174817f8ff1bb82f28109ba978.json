{"ast":null,"code":"var _jsxFileName = \"D:\\\\Internshala-project\\\\mini-linkedin-platform\\\\frontend\\\\src\\\\pages\\\\Profile.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { useParams } from 'react-router-dom';\n\n// const Profile = () => {\n//     const { userId } = useParams();\n//     const [user, setUser] = React.useState(null);\n//     const [loading, setLoading] = React.useState(true);\n\n//     React.useEffect(() => {\n//         const fetchUserProfile = async () => {\n//             try {\n//                 const response = await fetch(`/api/users/${userId}`);\n//                 const data = await response.json();\n//                 setUser(data);\n//             } catch (error) {\n//                 console.error('Error fetching user profile:', error);\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchUserProfile();\n//     }, [userId]);\n\n//     if (loading) {\n//         return <div>Loading...</div>;\n//     }\n\n//     if (!user) {\n//         return <div>User not found</div>;\n//     }\n\n//     return (\n//         <div className=\"container mx-auto p-4\">\n//             <h1 className=\"text-2xl font-bold\">{user.name}</h1>\n//             <p className=\"text-gray-600\">{user.bio}</p>\n//             <h2 className=\"text-xl mt-4\">Posts</h2>\n//             <ul>\n//                 {user.posts.map(post => (\n//                     <li key={post._id} className=\"border-b py-2\">\n//                         <h3 className=\"font-semibold\">{post.title}</h3>\n//                         <p>{post.content}</p>\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default Profile;\nimport React from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [user, setUser] = React.useState(null);\n  const [loading, setLoading] = React.useState(true);\n  React.useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) throw new Error('No token found');\n        const decoded = jwt_decode(token);\n        const userId = decoded.userId; // Adjust based on your token structure\n\n        const response = await fetch(`/api/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        setUser(data);\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserProfile();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 25\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"User not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600\",\n      children: user.bio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl mt-4\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: user.posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"border-b py-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","jwtDecode","jsxDEV","_jsxDEV","Profile","_s","user","setUser","useState","loading","setLoading","useEffect","fetchUserProfile","token","localStorage","getItem","Error","decoded","jwt_decode","userId","response","fetch","headers","Authorization","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","bio","posts","map","post","title","content","_id","_c","$RefreshReg$"],"sources":["D:/Internshala-project/mini-linkedin-platform/frontend/src/pages/Profile.jsx"],"sourcesContent":["// import React from 'react';\n// import { useParams } from 'react-router-dom';\n\n// const Profile = () => {\n//     const { userId } = useParams();\n//     const [user, setUser] = React.useState(null);\n//     const [loading, setLoading] = React.useState(true);\n\n//     React.useEffect(() => {\n//         const fetchUserProfile = async () => {\n//             try {\n//                 const response = await fetch(`/api/users/${userId}`);\n//                 const data = await response.json();\n//                 setUser(data);\n//             } catch (error) {\n//                 console.error('Error fetching user profile:', error);\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchUserProfile();\n//     }, [userId]);\n\n//     if (loading) {\n//         return <div>Loading...</div>;\n//     }\n\n//     if (!user) {\n//         return <div>User not found</div>;\n//     }\n\n//     return (\n//         <div className=\"container mx-auto p-4\">\n//             <h1 className=\"text-2xl font-bold\">{user.name}</h1>\n//             <p className=\"text-gray-600\">{user.bio}</p>\n//             <h2 className=\"text-xl mt-4\">Posts</h2>\n//             <ul>\n//                 {user.posts.map(post => (\n//                     <li key={post._id} className=\"border-b py-2\">\n//                         <h3 className=\"font-semibold\">{post.title}</h3>\n//                         <p>{post.content}</p>\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default Profile;\nimport React from 'react';\nimport { jwtDecode } from 'jwt-decode';\n\n\nconst Profile = () => {\n    const [user, setUser] = React.useState(null);\n    const [loading, setLoading] = React.useState(true);\n\n    React.useEffect(() => {\n        const fetchUserProfile = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                if (!token) throw new Error('No token found');\n\n                const decoded = jwt_decode(token);\n                const userId = decoded.userId; // Adjust based on your token structure\n\n                const response = await fetch(`/api/users/${userId}`, {\n                    headers: {\n                        Authorization: `Bearer ${token}`,\n                    },\n                });\n\n                const data = await response.json();\n                setUser(data);\n            } catch (error) {\n                console.error('Error fetching user profile:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchUserProfile();\n    }, []);\n\n    if (loading) return <div>Loading...</div>;\n    if (!user) return <div>User not found</div>;\n\n    return (\n        <div className=\"container mx-auto p-4\">\n            <h1 className=\"text-2xl font-bold\">{user.name}</h1>\n            <p className=\"text-gray-600\">{user.bio}</p>\n            <h2 className=\"text-xl mt-4\">Posts</h2>\n            <ul>\n                {user.posts.map(post => (\n                    <li key={post._id} className=\"border-b py-2\">\n                        <h3 className=\"font-semibold\">{post.title}</h3>\n                        <p>{post.content}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}