{"ast":null,"code":"var _jsxFileName = \"D:\\\\Internshala-project\\\\mini-linkedin-platform\\\\frontend\\\\src\\\\pages\\\\Profile.jsx\",\n  _s = $RefreshSig$();\n// // import React from 'react';\n// // import { useParams } from 'react-router-dom';\n\n// // const Profile = () => {\n// //     const { userId } = useParams();\n// //     const [user, setUser] = React.useState(null);\n// //     const [loading, setLoading] = React.useState(true);\n\n// //     React.useEffect(() => {\n// //         const fetchUserProfile = async () => {\n// //             try {\n// //                 const response = await fetch(`/api/users/${userId}`);\n// //                 const data = await response.json();\n// //                 setUser(data);\n// //             } catch (error) {\n// //                 console.error('Error fetching user profile:', error);\n// //             } finally {\n// //                 setLoading(false);\n// //             }\n// //         };\n\n// //         fetchUserProfile();\n// //     }, [userId]);\n\n// //     if (loading) {\n// //         return <div>Loading...</div>;\n// //     }\n\n// //     if (!user) {\n// //         return <div>User not found</div>;\n// //     }\n\n// //     return (\n// //         <div className=\"container mx-auto p-4\">\n// //             <h1 className=\"text-2xl font-bold\">{user.name}</h1>\n// //             <p className=\"text-gray-600\">{user.bio}</p>\n// //             <h2 className=\"text-xl mt-4\">Posts</h2>\n// //             <ul>\n// //                 {user.posts.map(post => (\n// //                     <li key={post._id} className=\"border-b py-2\">\n// //                         <h3 className=\"font-semibold\">{post.title}</h3>\n// //                         <p>{post.content}</p>\n// //                     </li>\n// //                 ))}\n// //             </ul>\n// //         </div>\n// //     );\n// // };\n\n// // export default Profile;\n// import React from 'react';\n// import { jwtDecode } from 'jwt-decode';\n\n// const Profile = () => {\n//     const [user, setUser] = React.useState(null);\n//     const [loading, setLoading] = React.useState(true);\n\n//     React.useEffect(() => {\n//         const fetchUserProfile = async () => {\n//             try {\n//                 const token = localStorage.getItem('token');\n//                 if (!token) throw new Error('No token found');\n\n//                 const decoded = jwt_decode(token);\n//                 const userId = decoded.userId; // Adjust based on your token structure\n\n//                 const response = await fetch(`/api/users/${userId}`, {\n//                     headers: {\n//                         Authorization: `Bearer ${token}`,\n//                     },\n//                 });\n\n//                 const data = await response.json();\n//                 setUser(data);\n//             } catch (error) {\n//                 console.error('Error fetching user profile:', error);\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchUserProfile();\n//     }, []);\n\n//     if (loading) return <div>Loading...</div>;\n//     if (!user) return <div>User not found</div>;\n\n//     return (\n//         <div className=\"container mx-auto p-4\">\n//             <h1 className=\"text-2xl font-bold\">{user.name}</h1>\n//             <p className=\"text-gray-600\">{user.bio}</p>\n//             <h2 className=\"text-xl mt-4\">Posts</h2>\n//             <ul>\n//                 {user.posts.map(post => (\n//                     <li key={post._id} className=\"border-b py-2\">\n//                         <h3 className=\"font-semibold\">{post.title}</h3>\n//                         <p>{post.content}</p>\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default Profile;\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jwtDecode } from 'jwt-decode';\nimport PostFeed from '../components/Feed/PostFeed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          toast.error('Please log in to view profiles.');\n          setLoading(false);\n          return;\n        }\n\n        // Get user ID from the URL params or from the decoded JWT token\n        let userId = id;\n        if (!userId) {\n          const decoded = jwtDecode(token);\n          userId = decoded.id; // Corrected: Accessing the ID with `decoded.id`\n        }\n        if (!userId) {\n          toast.error('Could not determine user ID.');\n          setLoading(false);\n          return;\n        }\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUser(response.data.user);\n        setPosts(response.data.posts);\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n        toast.error('Failed to fetch user profile.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserProfile();\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-8\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 16\n    }, this);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-8\",\n      children: \"User not found or an error occurred.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 max-w-2xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-md rounded-lg p-6 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-800 mb-2\",\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: user.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-md rounded-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-gray-800 mb-4\",\n        children: [\"Posts by \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(PostFeed, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No posts available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"NUZVkz7bePmSXd3JlrzvXKDSHxo=\", false, function () {\n  return [useParams];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","toast","jwtDecode","PostFeed","jsxDEV","_jsxDEV","Profile","_s","id","user","setUser","posts","setPosts","loading","setLoading","fetchUserProfile","token","localStorage","getItem","error","userId","decoded","response","get","process","env","REACT_APP_API_URL","headers","Authorization","data","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","bio","length","_c","$RefreshReg$"],"sources":["D:/Internshala-project/mini-linkedin-platform/frontend/src/pages/Profile.jsx"],"sourcesContent":["// // import React from 'react';\n// // import { useParams } from 'react-router-dom';\n\n// // const Profile = () => {\n// //     const { userId } = useParams();\n// //     const [user, setUser] = React.useState(null);\n// //     const [loading, setLoading] = React.useState(true);\n\n// //     React.useEffect(() => {\n// //         const fetchUserProfile = async () => {\n// //             try {\n// //                 const response = await fetch(`/api/users/${userId}`);\n// //                 const data = await response.json();\n// //                 setUser(data);\n// //             } catch (error) {\n// //                 console.error('Error fetching user profile:', error);\n// //             } finally {\n// //                 setLoading(false);\n// //             }\n// //         };\n\n// //         fetchUserProfile();\n// //     }, [userId]);\n\n// //     if (loading) {\n// //         return <div>Loading...</div>;\n// //     }\n\n// //     if (!user) {\n// //         return <div>User not found</div>;\n// //     }\n\n// //     return (\n// //         <div className=\"container mx-auto p-4\">\n// //             <h1 className=\"text-2xl font-bold\">{user.name}</h1>\n// //             <p className=\"text-gray-600\">{user.bio}</p>\n// //             <h2 className=\"text-xl mt-4\">Posts</h2>\n// //             <ul>\n// //                 {user.posts.map(post => (\n// //                     <li key={post._id} className=\"border-b py-2\">\n// //                         <h3 className=\"font-semibold\">{post.title}</h3>\n// //                         <p>{post.content}</p>\n// //                     </li>\n// //                 ))}\n// //             </ul>\n// //         </div>\n// //     );\n// // };\n\n// // export default Profile;\n// import React from 'react';\n// import { jwtDecode } from 'jwt-decode';\n\n\n// const Profile = () => {\n//     const [user, setUser] = React.useState(null);\n//     const [loading, setLoading] = React.useState(true);\n\n//     React.useEffect(() => {\n//         const fetchUserProfile = async () => {\n//             try {\n//                 const token = localStorage.getItem('token');\n//                 if (!token) throw new Error('No token found');\n\n//                 const decoded = jwt_decode(token);\n//                 const userId = decoded.userId; // Adjust based on your token structure\n\n//                 const response = await fetch(`/api/users/${userId}`, {\n//                     headers: {\n//                         Authorization: `Bearer ${token}`,\n//                     },\n//                 });\n\n//                 const data = await response.json();\n//                 setUser(data);\n//             } catch (error) {\n//                 console.error('Error fetching user profile:', error);\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchUserProfile();\n//     }, []);\n\n//     if (loading) return <div>Loading...</div>;\n//     if (!user) return <div>User not found</div>;\n\n//     return (\n//         <div className=\"container mx-auto p-4\">\n//             <h1 className=\"text-2xl font-bold\">{user.name}</h1>\n//             <p className=\"text-gray-600\">{user.bio}</p>\n//             <h2 className=\"text-xl mt-4\">Posts</h2>\n//             <ul>\n//                 {user.posts.map(post => (\n//                     <li key={post._id} className=\"border-b py-2\">\n//                         <h3 className=\"font-semibold\">{post.title}</h3>\n//                         <p>{post.content}</p>\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default Profile;\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jwtDecode } from 'jwt-decode';\nimport PostFeed from '../components/Feed/PostFeed';\n\nconst Profile = () => {\n    const { id } = useParams();\n    const [user, setUser] = useState(null);\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchUserProfile = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                if (!token) {\n                    toast.error('Please log in to view profiles.');\n                    setLoading(false);\n                    return;\n                }\n\n                // Get user ID from the URL params or from the decoded JWT token\n                let userId = id;\n                if (!userId) {\n                    const decoded = jwtDecode(token);\n                    userId = decoded.id; // Corrected: Accessing the ID with `decoded.id`\n                }\n\n                if (!userId) {\n                    toast.error('Could not determine user ID.');\n                    setLoading(false);\n                    return;\n                }\n\n                const response = await axios.get(\n                    `${process.env.REACT_APP_API_URL}/users/${userId}`,\n                    {\n                        headers: {\n                            Authorization: `Bearer ${token}`,\n                        },\n                    }\n                );\n\n                setUser(response.data.user);\n                setPosts(response.data.posts);\n            } catch (error) {\n                console.error('Error fetching user profile:', error);\n                toast.error('Failed to fetch user profile.');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchUserProfile();\n    }, [id]);\n\n    if (loading) {\n        return <div className=\"text-center mt-8\">Loading...</div>;\n    }\n\n    if (!user) {\n        return <div className=\"text-center mt-8\">User not found or an error occurred.</div>;\n    }\n\n    return (\n        <div className=\"container mx-auto p-4 max-w-2xl\">\n            <div className=\"bg-white shadow-md rounded-lg p-6 mb-6\">\n                <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">{user.name}</h1>\n                <p className=\"text-gray-600\">{user.bio}</p>\n            </div>\n            <div className=\"bg-white shadow-md rounded-lg p-6\">\n                <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">Posts by {user.name}</h2>\n                {posts.length > 0 ? (\n                    <PostFeed posts={posts} />\n                ) : (\n                    <p className=\"text-gray-500\">No posts available.</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}