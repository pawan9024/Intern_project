{"ast":null,"code":"var _jsxFileName = \"D:\\\\Internshala-project\\\\mini-linkedin-platform\\\\frontend\\\\src\\\\pages\\\\Profile.jsx\",\n  _s = $RefreshSig$();\n// // import React from 'react';\n// // import { useParams } from 'react-router-dom';\n\n// // const Profile = () => {\n// //     const { userId } = useParams();\n// //     const [user, setUser] = React.useState(null);\n// //     const [loading, setLoading] = React.useState(true);\n\n// //     React.useEffect(() => {\n// //         const fetchUserProfile = async () => {\n// //             try {\n// //                 const response = await fetch(`/api/users/${userId}`);\n// //                 const data = await response.json();\n// //                 setUser(data);\n// //             } catch (error) {\n// //                 console.error('Error fetching user profile:', error);\n// //             } finally {\n// //                 setLoading(false);\n// //             }\n// //         };\n\n// //         fetchUserProfile();\n// //     }, [userId]);\n\n// //     if (loading) {\n// //         return <div>Loading...</div>;\n// //     }\n\n// //     if (!user) {\n// //         return <div>User not found</div>;\n// //     }\n\n// //     return (\n// //         <div className=\"container mx-auto p-4\">\n// //             <h1 className=\"text-2xl font-bold\">{user.name}</h1>\n// //             <p className=\"text-gray-600\">{user.bio}</p>\n// //             <h2 className=\"text-xl mt-4\">Posts</h2>\n// //             <ul>\n// //                 {user.posts.map(post => (\n// //                     <li key={post._id} className=\"border-b py-2\">\n// //                         <h3 className=\"font-semibold\">{post.title}</h3>\n// //                         <p>{post.content}</p>\n// //                     </li>\n// //                 ))}\n// //             </ul>\n// //         </div>\n// //     );\n// // };\n\n// // export default Profile;\n// import React from 'react';\n// import { jwtDecode } from 'jwt-decode';\n\n// const Profile = () => {\n//     const [user, setUser] = React.useState(null);\n//     const [loading, setLoading] = React.useState(true);\n\n//     React.useEffect(() => {\n//         const fetchUserProfile = async () => {\n//             try {\n//                 const token = localStorage.getItem('token');\n//                 if (!token) throw new Error('No token found');\n\n//                 const decoded = jwt_decode(token);\n//                 const userId = decoded.userId; // Adjust based on your token structure\n\n//                 const response = await fetch(`/api/users/${userId}`, {\n//                     headers: {\n//                         Authorization: `Bearer ${token}`,\n//                     },\n//                 });\n\n//                 const data = await response.json();\n//                 setUser(data);\n//             } catch (error) {\n//                 console.error('Error fetching user profile:', error);\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchUserProfile();\n//     }, []);\n\n//     if (loading) return <div>Loading...</div>;\n//     if (!user) return <div>User not found</div>;\n\n//     return (\n//         <div className=\"container mx-auto p-4\">\n//             <h1 className=\"text-2xl font-bold\">{user.name}</h1>\n//             <p className=\"text-gray-600\">{user.bio}</p>\n//             <h2 className=\"text-xl mt-4\">Posts</h2>\n//             <ul>\n//                 {user.posts.map(post => (\n//                     <li key={post._id} className=\"border-b py-2\">\n//                         <h3 className=\"font-semibold\">{post.title}</h3>\n//                         <p>{post.content}</p>\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default Profile;\n\nimport React, { useEffect, useState } from 'react'; // Corrected this line\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jwtDecode } from 'jwt-decode';\nimport PostFeed from '../components/Feed/PostFeed';\nimport EditProfile from '../components/Profile/EditProfile'; // Import the new component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isCurrentUserProfile, setIsCurrentUserProfile] = useState(false);\n  const fetchUserProfile = async profileId => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        toast.error('Please log in to view profiles.');\n        setLoading(false);\n        return;\n      }\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/users/${profileId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUser(response.data.user);\n      setPosts(response.data.posts);\n\n      // Check if this is the current user's profile\n      const decoded = jwtDecode(token);\n      if (decoded.id === profileId) {\n        setIsCurrentUserProfile(true);\n      } else {\n        setIsCurrentUserProfile(false);\n      }\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      toast.error('Failed to fetch user profile.');\n      setUser(null); // Ensure user is null on error\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    let profileIdToFetch = id;\n    if (!id) {\n      // If no ID in URL, try to get from token (current user's profile)\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const decoded = jwtDecode(token);\n          profileIdToFetch = decoded.id;\n        } catch (error) {\n          console.error('Error decoding token for profile page:', error);\n          toast.error('Invalid token. Please log in again.');\n          setLoading(false);\n          return;\n        }\n      } else {\n        toast.info('Please log in to view your profile.');\n        setLoading(false);\n        return;\n      }\n    }\n    if (profileIdToFetch) {\n      fetchUserProfile(profileIdToFetch);\n    } else {\n      setLoading(false);\n    }\n  }, [id]); // Re-fetch if ID in URL changes\n\n  const handleProfileUpdated = updatedUser => {\n    setUser(updatedUser);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 max-w-2xl bg-gray-50 min-h-screen\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-8 text-lg font-semibold text-gray-700\",\n      children: \"Loading profile...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, this) : user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isEditing ? /*#__PURE__*/_jsxDEV(EditProfile, {\n        user: user,\n        onProfileUpdated: handleProfileUpdated,\n        onCancel: () => setIsEditing(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-md rounded-lg p-6 mb-6 border border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold text-gray-800\",\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 33\n          }, this), isCurrentUserProfile && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsEditing(true),\n            className: \"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-full shadow-lg transition duration-300 ease-in-out\",\n            children: \"Edit Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 text-lg\",\n          children: user.bio || 'No bio provided.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-md rounded-lg p-6 border border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold text-gray-800 mb-4\",\n          children: [\"Posts by \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(PostFeed, {\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"No posts available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-8 text-red-600 text-lg font-semibold\",\n      children: \"User not found or an error occurred.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"rjZ3IZjBBeUSNVIjyDbpM8KCA5o=\", false, function () {\n  return [useParams];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","toast","jwtDecode","PostFeed","EditProfile","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","id","user","setUser","posts","setPosts","loading","setLoading","isEditing","setIsEditing","isCurrentUserProfile","setIsCurrentUserProfile","fetchUserProfile","profileId","token","localStorage","getItem","error","response","get","process","env","REACT_APP_API_URL","headers","Authorization","data","decoded","console","profileIdToFetch","info","handleProfileUpdated","updatedUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onProfileUpdated","onCancel","name","onClick","bio","length","_c","$RefreshReg$"],"sources":["D:/Internshala-project/mini-linkedin-platform/frontend/src/pages/Profile.jsx"],"sourcesContent":["// // import React from 'react';\n// // import { useParams } from 'react-router-dom';\n\n// // const Profile = () => {\n// //     const { userId } = useParams();\n// //     const [user, setUser] = React.useState(null);\n// //     const [loading, setLoading] = React.useState(true);\n\n// //     React.useEffect(() => {\n// //         const fetchUserProfile = async () => {\n// //             try {\n// //                 const response = await fetch(`/api/users/${userId}`);\n// //                 const data = await response.json();\n// //                 setUser(data);\n// //             } catch (error) {\n// //                 console.error('Error fetching user profile:', error);\n// //             } finally {\n// //                 setLoading(false);\n// //             }\n// //         };\n\n// //         fetchUserProfile();\n// //     }, [userId]);\n\n// //     if (loading) {\n// //         return <div>Loading...</div>;\n// //     }\n\n// //     if (!user) {\n// //         return <div>User not found</div>;\n// //     }\n\n// //     return (\n// //         <div className=\"container mx-auto p-4\">\n// //             <h1 className=\"text-2xl font-bold\">{user.name}</h1>\n// //             <p className=\"text-gray-600\">{user.bio}</p>\n// //             <h2 className=\"text-xl mt-4\">Posts</h2>\n// //             <ul>\n// //                 {user.posts.map(post => (\n// //                     <li key={post._id} className=\"border-b py-2\">\n// //                         <h3 className=\"font-semibold\">{post.title}</h3>\n// //                         <p>{post.content}</p>\n// //                     </li>\n// //                 ))}\n// //             </ul>\n// //         </div>\n// //     );\n// // };\n\n// // export default Profile;\n// import React from 'react';\n// import { jwtDecode } from 'jwt-decode';\n\n\n// const Profile = () => {\n//     const [user, setUser] = React.useState(null);\n//     const [loading, setLoading] = React.useState(true);\n\n//     React.useEffect(() => {\n//         const fetchUserProfile = async () => {\n//             try {\n//                 const token = localStorage.getItem('token');\n//                 if (!token) throw new Error('No token found');\n\n//                 const decoded = jwt_decode(token);\n//                 const userId = decoded.userId; // Adjust based on your token structure\n\n//                 const response = await fetch(`/api/users/${userId}`, {\n//                     headers: {\n//                         Authorization: `Bearer ${token}`,\n//                     },\n//                 });\n\n//                 const data = await response.json();\n//                 setUser(data);\n//             } catch (error) {\n//                 console.error('Error fetching user profile:', error);\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchUserProfile();\n//     }, []);\n\n//     if (loading) return <div>Loading...</div>;\n//     if (!user) return <div>User not found</div>;\n\n//     return (\n//         <div className=\"container mx-auto p-4\">\n//             <h1 className=\"text-2xl font-bold\">{user.name}</h1>\n//             <p className=\"text-gray-600\">{user.bio}</p>\n//             <h2 className=\"text-xl mt-4\">Posts</h2>\n//             <ul>\n//                 {user.posts.map(post => (\n//                     <li key={post._id} className=\"border-b py-2\">\n//                         <h3 className=\"font-semibold\">{post.title}</h3>\n//                         <p>{post.content}</p>\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default Profile;\n\nimport React, { useEffect, useState } from 'react'; // Corrected this line\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jwtDecode } from 'jwt-decode';\nimport PostFeed from '../components/Feed/PostFeed';\nimport EditProfile from '../components/Profile/EditProfile'; // Import the new component\n\nconst Profile = () => {\n    const { id } = useParams();\n    const [user, setUser] = useState(null);\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [isEditing, setIsEditing] = useState(false);\n    const [isCurrentUserProfile, setIsCurrentUserProfile] = useState(false);\n\n    const fetchUserProfile = async (profileId) => {\n        setLoading(true);\n        try {\n            const token = localStorage.getItem('token');\n            if (!token) {\n                toast.error('Please log in to view profiles.');\n                setLoading(false);\n                return;\n            }\n\n            const response = await axios.get(\n                `${process.env.REACT_APP_API_URL}/users/${profileId}`,\n                {\n                    headers: {\n                        Authorization: `Bearer ${token}`,\n                    },\n                }\n            );\n\n            setUser(response.data.user);\n            setPosts(response.data.posts);\n\n            // Check if this is the current user's profile\n            const decoded = jwtDecode(token);\n            if (decoded.id === profileId) {\n                setIsCurrentUserProfile(true);\n            } else {\n                setIsCurrentUserProfile(false);\n            }\n\n        } catch (error) {\n            console.error('Error fetching user profile:', error);\n            toast.error('Failed to fetch user profile.');\n            setUser(null); // Ensure user is null on error\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        let profileIdToFetch = id;\n        if (!id) { // If no ID in URL, try to get from token (current user's profile)\n            const token = localStorage.getItem('token');\n            if (token) {\n                try {\n                    const decoded = jwtDecode(token);\n                    profileIdToFetch = decoded.id;\n                } catch (error) {\n                    console.error('Error decoding token for profile page:', error);\n                    toast.error('Invalid token. Please log in again.');\n                    setLoading(false);\n                    return;\n                }\n            } else {\n                toast.info('Please log in to view your profile.');\n                setLoading(false);\n                return;\n            }\n        }\n\n        if (profileIdToFetch) {\n            fetchUserProfile(profileIdToFetch);\n        } else {\n            setLoading(false);\n        }\n    }, [id]); // Re-fetch if ID in URL changes\n\n    const handleProfileUpdated = (updatedUser) => {\n        setUser(updatedUser);\n    };\n\n    return (\n        <div className=\"container mx-auto p-4 max-w-2xl bg-gray-50 min-h-screen\">\n            {loading ? (\n                <div className=\"text-center mt-8 text-lg font-semibold text-gray-700\">Loading profile...</div>\n            ) : user ? (\n                <>\n                    {isEditing ? (\n                        <EditProfile user={user} onProfileUpdated={handleProfileUpdated} onCancel={() => setIsEditing(false)} />\n                    ) : (\n                        <div className=\"bg-white shadow-md rounded-lg p-6 mb-6 border border-gray-200\">\n                            <div className=\"flex justify-between items-center mb-4\">\n                                <h1 className=\"text-3xl font-bold text-gray-800\">{user.name}</h1>\n                                {isCurrentUserProfile && (\n                                    <button\n                                        onClick={() => setIsEditing(true)}\n                                        className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-full shadow-lg transition duration-300 ease-in-out\"\n                                    >\n                                        Edit Profile\n                                    </button>\n                                )}\n                            </div>\n                            <p className=\"text-gray-600 text-lg\">{user.bio || 'No bio provided.'}</p>\n                        </div>\n                    )}\n\n                    <div className=\"bg-white shadow-md rounded-lg p-6 border border-gray-200\">\n                        <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">Posts by {user.name}</h2>\n                        {posts.length > 0 ? (\n                            <PostFeed posts={posts} />\n                        ) : (\n                            <p className=\"text-gray-500\">No posts available.</p>\n                        )}\n                    </div>\n                </>\n            ) : (\n                <div className=\"text-center mt-8 text-red-600 text-lg font-semibold\">User not found or an error occurred.</div>\n            )}\n        </div>\n    );\n};\n\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}