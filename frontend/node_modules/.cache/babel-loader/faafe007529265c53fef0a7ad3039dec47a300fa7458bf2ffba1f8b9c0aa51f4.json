{"ast":null,"code":"var _jsxFileName = \"D:\\\\Internshala-project\\\\mini-linkedin-platform\\\\frontend\\\\src\\\\components\\\\Feed\\\\PostFeed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostFeed = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get('/api/posts');\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Public Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold\",\n          children: post.author.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700\",\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-sm\",\n          children: new Date(post.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(PostFeed, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = PostFeed;\nexport default PostFeed;\nvar _c;\n$RefreshReg$(_c, \"PostFeed\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PostFeed","_s","posts","setPosts","fetchPosts","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","author","name","content","Date","createdAt","toLocaleString","_id","_c","$RefreshReg$"],"sources":["D:/Internshala-project/mini-linkedin-platform/frontend/src/components/Feed/PostFeed.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst PostFeed = () => {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            try {\n                const response = await axios.get('/api/posts');\n                setPosts(response.data);\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n            }\n        };\n\n        fetchPosts();\n    }, []);\n\n    return (\n        <div className=\"p-4\">\n            <h2 className=\"text-2xl font-bold mb-4\">Public Posts</h2>\n            <div className=\"space-y-4\">\n                {posts.map(post => (\n                    <div key={post._id} className=\"p-4 border rounded-lg shadow\">\n                        <h3 className=\"font-semibold\">{post.author.name}</h3>\n                        <p className=\"text-gray-700\">{post.content}</p>\n                        <p className=\"text-gray-500 text-sm\">{new Date(post.createdAt).toLocaleString()}</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default PostFeed;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,YAAY,CAAC;QAC9CH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDJ,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBZ,OAAA;MAAIW,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzDhB,OAAA;MAAKW,SAAS,EAAC,WAAW;MAAAC,QAAA,EACrBT,KAAK,CAACc,GAAG,CAACC,IAAI,iBACXlB,OAAA;QAAoBW,SAAS,EAAC,8BAA8B;QAAAC,QAAA,gBACxDZ,OAAA;UAAIW,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEM,IAAI,CAACC,MAAM,CAACC;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrDhB,OAAA;UAAGW,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEM,IAAI,CAACG;QAAO;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/ChB,OAAA;UAAGW,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAE,IAAIU,IAAI,CAACJ,IAAI,CAACK,SAAS,CAAC,CAACC,cAAc,CAAC;QAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAH9EE,IAAI,CAACO,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACd,EAAA,CA9BID,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}